---

- name: Get channel for operator from packagemanifest
  command: oc get packagemanifest "{{ OPERATOR_NAME }}" -n openshift-marketplace -o jsonpath='{.status.defaultChannel}' --kubeconfig "{{ KUBECONFIG }}"
  register: CHANNEL

- name: Get catalog source for operator from packagemanifest
  command: oc get packagemanifest "{{ OPERATOR_NAME }}" -n openshift-marketplace -o jsonpath='{.status.catalogSource}' --kubeconfig "{{ KUBECONFIG }}"
  register: CATALOG_SOURCE

- name: Check if Operator Group is needed
  command: oc get packagemanifest "{{ OPERATOR_NAME }}" -n openshift-marketplace  -o jsonpath='{.status.channels[].currentCSVDesc.installModes[3]}' --kubeconfig "{{ KUBECONFIG }}"
  register: INSTALL_MODE

- name: Create a k8s namespace
  k8s:
    name: "{{ NAMESPACE }}"
    api_version: v1
    kind: Namespace
    state: present
  when: "'true' not in INSTALL_MODE.stdout"

- name: Create operator subscription
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        labels:
          operators.coreos.com/{{ OPERATOR_NAME }}.{{ NAMESPACE }}: ''
        name: "{{ OPERATOR_NAME }}"
        namespace: "{{ NAMESPACE }}"
      spec:
        channel: "{{ CHANNEL.stdout }}"
        installPlanApproval: Automatic
        name: "{{ OPERATOR_NAME }}"
        source: "{{ CATALOG_SOURCE.stdout }}"
        sourceNamespace: openshift-marketplace
    kubeconfig: "{{ KUBECONFIG }}"
  register: subscription

- debug:
    var: subscription.result.status
